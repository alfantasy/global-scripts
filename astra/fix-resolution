#!/bin/bash
CONFIG_FIXRES="/etc/fix-resolution.conf"

# Взятие текущего сессионого пользователя
XUSER=$(loginctl list-sessions | awk '$1 ~ /^[0-9]+$/ { print $1 }' | while read session; do
    uid=$(loginctl show-session "$session" -p User --value)
    active=$(loginctl show-session "$session" -p Active --value)
    if [[ "$active" == "yes" ]]; then
        id -nu "$uid"
        break
    fi
done)

# Использование экспорт-переменных
export XUSER
export DISPLAY=:0
export XAUTHORITY="/home/$XUSER/.Xauthority"    

# Подгрузка конфигурации
load_config() {    
    RESOLUTION="1920x1080"
    RATE="60"

    if [ -f "$CONFIG_FIXRES" ]; then
        source "$CONFIG_FIXRES"
    fi
}

# Генерирование конфигурации
generate_xorg_config() {
    echo "Генерация конфигурации Xorg..."
    # Берем основной файл для фиксированного разрешения
    CONFIG_FILE="/etc/X11/xorg.conf.d/10-fixed-resolution.conf"
    # Берем подключение мониторы
    MONITORS=$(xrandr --query | grep " connected" | cut -d" " -f1)

    # Загружаем конфигурацию
    load_config
    WIDTH=$(echo "$RESOLUTION" | cut -d"x" -f1)
    HEIGHT=$(echo "$RESOLUTION" | cut -d"x" -f2)
    # Генерируем модельную строку через cvt
    MODELINE_RAW=$(cvt "$WIDTH" "$HEIGHT" "$RATE" | grep Modeline)
    # Удаляем слово "Modeline" из начала строки, чтобы вставить в конфиг
    MODELINE="${MODELINE_RAW#Modeline }"

    # Записываем начальные секции, а это именно серверные флаги, запрещаем конфигурировать все автоматически
    cat > "$CONFIG_FILE" <<EOF
Section "ServerFlags"
    Option "AutoAddDevices" "false"
    Option "AutoEnableDevices" "false"
EndSection

Section "Device"
    Identifier  "GPU"
    Driver      "modesetting"
    Option      "ModeDebug" "true"
EOF

    echo "Основные флаги установлены."
    if lspci | grep -qi nvidia; then
        echo '    Option "CustomEDID" "none"' >> "$CONFIG_FILE"
        echo '    Option "ModeValidation" "NoEdidModes"' >> "$CONFIG_FILE"
    elif lspci | grep -qi amd; then
        echo '    Option "VariableRefresh" "false"' >> "$CONFIG_FILE"
    fi

    echo 'EndSection' >> "$CONFIG_FILE"

    # Заполняем пользовательские разрешения и перечисляем все существующие мониторы
    echo "Заполнение секций мониторов..."
    for MONITOR in $MONITORS; do
        cat >> "$CONFIG_FILE" <<EOF

Section "Monitor"
    Identifier  "$MONITOR"
    Option      "PreferredMode" "$RESOLUTION"
    Option      "IgnoreEDID" "true"
    Option      "UseEDID" "false"
    Option      "DPMS" "false"
    Modeline    $MODELINE
EndSection
EOF
    done

    echo "Заполнение секций экранов..."
    cat >> "$CONFIG_FILE" <<EOF

Section "Screen"
    Identifier  "DefaultScreen"
    Device      "GPU"
    DefaultDepth 24
EOF

    # Заполняем модификаторы дисплеев
    for MONITOR in $MONITORS; do
        echo "    Monitor     \"$MONITOR\"" >> "$CONFIG_FILE"
    done

    cat >> "$CONFIG_FILE" <<EOF
    SubSection "Display"
        Depth    24
        Modes    "${RESOLUTION}_${RATE}.00"
    EndSubSection
EndSection
EOF
    echo "Конфигурация Xorg сгенерирована."
}

resolution_daemon() {
    echo "Запуск демона мониторинга разрешения..."
    LAST_STATE=$(xrandr --query | grep " connected")

    echo "Найден пользователь с активной сессией: $XUSER"
    echo "Реализация конфигурации под текущего запущенного пользователя с сессией Xorg"

    while true; do
        CURRENT_STATE=$(xrandr --query | grep " connected")
        
        if [ "$CURRENT_STATE" != "$LAST_STATE" ]; then
            echo "Обнаружено изменение конфигурации мониторов! Применяем конфигурацию..."
            generate_xorg_config
            apply_resolution
            LAST_STATE="$CURRENT_STATE"
            echo "Конфигурация применена."
        fi
        
        for MONITOR in $(xrandr --query | grep " connected" | cut -d" " -f1); do
            CURRENT_MODE=$(xrandr --query | grep -A1 "^$MONITOR" | grep -oP '\d+x\d+' | head -1)
            if [ "$CURRENT_MODE" != "1920x1080" ]; then
                echo "Исправляем разрешение для $MONITOR..."
                xrandr --output "$MONITOR" --mode 1920x1080 --rate 60
                echo "Разрешение для $MONITOR установлено в 1920x1080."
            fi
        done
        
        sleep 10
    done
}

apply_resolution() {
    # Применяем конфигурацию
    load_config
    WIDTH=$(echo "$RESOLUTION" | cut -d"x" -f1) # Ширина
    HEIGHT=$(echo "$RESOLUTION" | cut -d"x" -f2) # Высота
    MODELINE=$(cvt "$WIDTH" "$HEIGHT" "$RATE" | grep Modeline) # Строка режима
    MODE_NAME=$(echo "$MODELINE" | awk '{print $2}') # Название режима
    MODELINE_STR="${MODELINE#Modeline }" # Строка режима без названия
    # Выставляем разрешение, если что-то изменилось в течении работы демона
    for MONITOR in $(xrandr --query | grep " connected" | cut -d" " -f1); do
        echo "Сервис пытается применить разрешение $RESOLUTION@$RATE для $MONITOR..."
        if ! xrandr | grep -q "$MODE_NAME"; then
            echo "Добавляем режим: $MODE_NAME"
            xrandr --newmode $MODELINE_STR 2>/dev/null
            xrandr --addmode "$MONITOR" "$MODE_NAME" 2>/dev/null
        fi
        xrandr --output "$MONITOR" --mode "$MODE_NAME" --rate "$RATE"
    done
}

create_systemd_service() {
    echo "Регистрация systemd сервиса..."
    SERVICE_FILE="/etc/systemd/system/resolution-fix.service"

    cat > "$SERVICE_FILE" <<EOF
[Unit]
Description=Fix display resolution and monitor configuration
After=display-manager.service
Requires=display-manager.service

[Service]
Type=simple
Environment="DISPLAY=$DISPLAY"
Environment="XAUTHORITY=$XAUTHORITY"
User=root
ExecStartPre=/bin/sleep 10
ExecStart=/usr/local/bin/fix-resolution --daemon
Restart=always
RestartSec=5

[Install]
WantedBy=graphical.target
EOF

    echo "Регистрация завершена."
    systemctl daemon-reload
    systemctl enable resolution-fix.service
    systemctl start resolution-fix.service
}

case "$1" in
    --start)
        generate_xorg_config
        apply_resolution
        echo "Конфигурация применена. Для постоянной работы запустите:"
        echo "  $0 --install"
        ;;
    --daemon)
        resolution_daemon
        ;;
    --install)
        generate_xorg_config
        apply_resolution
        create_systemd_service
        echo "Установка Fix Resolution завершена. Сервис resolution-fix.service запущен и добавлен в автозагрузку."
        ;;
    --help)
        echo "Использование fix-resolution:"
        echo "  $0 --start - применение конфигурации без активации демона в системе"
        echo "  $0 --daemon - базовая регистрация демона в системе"
        echo "  $0 --install - полная инсталляция демона в systemd в записью в автозагрузку"
        ;;
    --config)
        mkdir -p "$(dirname "$CONFIG_FIXRES")"

        case "$2" in
            set)
                KEY="$3"
                VALUE="$4"
                if grep -q "^${KEY}=" "$CONFIG_FIXRES" 2>/dev/null; then
                    sed -i "s|^${KEY}=.*|${KEY}=${VALUE}|" "$CONFIG_FIXRES"
                else
                    echo "${KEY}=${VALUE}" >> "$CONFIG_FIXRES"
                fi
                echo "Конфигурация обновлена: $KEY=$VALUE"
                ;;
            show)
                echo "Текущая конфигурация:"
                cat "$CONFIG_FIXRES"
                ;;  
            *)
                echo "Использование:"
                echo "  $0 --config set ключ значение"
                echo "  $0 --config show"
                echo "  "
                echo " Основные переменные: "
                echo "  - RESOLUTION=<ширина>x<высота>"
                echo "  - RATE=<частота>"
                echo "  "
                echo "Пример: $0 --config set RESOLUTION 1920x1080"
                ;;
        esac
        exit 0
        ;;
    *)
        echo "Неизвестная опция: $1. Используйте fix-resolution --help для вывода справки."
        ;;
esac